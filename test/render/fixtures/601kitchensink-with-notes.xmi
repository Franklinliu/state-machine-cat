<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:uml="http://schema.omg.org/spec/UML/2.0" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1">
    <xmi:Documentation exporter="state-machine-cat"/>
    <uml:Model xmi:id="rootmodel" xmi:type="uml:Model" name="RootModel">
        <packagedElement xmi:id="model" name="Model" visibility="public" xmi:type="uml:Model">
            <packagedElement xmi:id="statemachine" name="AStateMachine" visibility="public" isReentrant="true" xmi:type="uml:StateMachine">
                <region xmi:id="region_0" visibility="public" xmi:type="uml:Region">
                    <subvertex xmi:id="initial" name="initial" visibility="public" xmi:type="uml:Pseudostate" kind="initial">
                    </subvertex>
                    <subvertex xmi:id="doing" name="doing" visibility="public" xmi:type="uml:State">
                        <doActivity xmi:id="doing_doActivity_onentry/ &#x60;write unit test&#x60;" name="onentry/ &#x60;write unit test&#x60;" visibility="public" isReentrant="true" xmi:type="uml:OpaqueBehavior"/>
                        <doActivity xmi:id="doing_doActivity_onentry/ &#x60;write code&#x60;" name="onentry/ &#x60;write code&#x60;" visibility="public" isReentrant="true" xmi:type="uml:OpaqueBehavior"/>
                        <doActivity xmi:id="doing_doActivity_onexit/ &#x60;drink coffee&#x60;" name="onexit/ &#x60;drink coffee&#x60;" visibility="public" isReentrant="true" xmi:type="uml:OpaqueBehavior"/>
                        <doActivity xmi:id="doing_doActivity_..." name="..." visibility="public" isReentrant="true" xmi:type="uml:OpaqueBehavior"/>
                    </subvertex>
                    <subvertex xmi:id="final" name="final" visibility="public" xmi:type="uml:FinalState">
                    </subvertex>
                    <subvertex xmi:id="on_backlog" name="on backlog" visibility="public" xmi:type="uml:State">
                    </subvertex>
                    <subvertex xmi:id="testing" name="testing" visibility="public" xmi:type="uml:State">
                    </subvertex>
                    <transition xmi:id="initial_to_on_backlog_item_adds_most_value" visibility="public" xmi:type="uml:Transition" source="initial" target="on_backlog" kind="external">
                        <ownedMember xmi:id="initial_to_on_backlog_event_item_adds_most_value" name="item adds most value" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        <trigger xmi:id="initial_to_on_backlog_event" xmi:type="uml:Trigger" name="item adds most value" event="initial_to_on_backlog_event_item adds most value"/>
                        <trigger xmi:id="initial_to_on_backlog_event_item_adds_most_value" name="item adds most value" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                    </transition>
                    <transition xmi:id="on_backlog_to_doing_working_on_it" visibility="public" xmi:type="uml:Transition" source="on_backlog" target="doing" kind="external">
                        <ownedMember xmi:id="on_backlog_to_doing_event_working_on_it" name="working on it" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        <trigger xmi:id="on_backlog_to_doing_event" xmi:type="uml:Trigger" name="working on it" event="on_backlog_to_doing_event_working on it"/>
                        <trigger xmi:id="on_backlog_to_doing_event_working_on_it" name="working on it" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                    </transition>
                    <transition xmi:id="doing_to_testing_built___unit_tested" visibility="public" xmi:type="uml:Transition" source="doing" target="testing" kind="external">
                        <ownedMember xmi:id="doing_to_testing_event_built___unit_tested" name="built &amp; unit tested" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        <trigger xmi:id="doing_to_testing_event" xmi:type="uml:Trigger" name="built &amp; unit tested" event="doing_to_testing_event_built &amp; unit tested"/>
                        <trigger xmi:id="doing_to_testing_event_built___unit_tested" name="built &amp; unit tested" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                    </transition>
                    <transition xmi:id="testing_to_on_backlog_test_not_ok" visibility="public" xmi:type="uml:Transition" source="testing" target="on_backlog" kind="external">
                        <ownedMember xmi:id="testing_to_on_backlog_event_test_not_ok" name="test not ok" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        <trigger xmi:id="testing_to_on_backlog_event" xmi:type="uml:Trigger" name="test not ok" event="testing_to_on_backlog_event_test not ok"/>
                        <trigger xmi:id="testing_to_on_backlog_event_test_not_ok" name="test not ok" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                    </transition>
                    <transition xmi:id="testing_to_final_test_ok" visibility="public" xmi:type="uml:Transition" source="testing" target="final" kind="external">
                        <ownedMember xmi:id="testing_to_final_event_test_ok" name="test ok" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        <trigger xmi:id="testing_to_final_event" xmi:type="uml:Trigger" name="test ok" event="testing_to_final_event_test ok"/>
                        <trigger xmi:id="testing_to_final_event_test_ok" name="test ok" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                    </transition>
                </region>
            </packagedElement>
        </packagedElement>
    </uml:Model>
</xmi:XMI>