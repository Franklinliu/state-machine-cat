<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:uml="http://schema.omg.org/spec/UML/2.0" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1">
    <xmi:Documentation exporter="state-machine-cat"/>
    <uml:Model xmi:id="rootmodel" xmi:type="uml:Model" name="RootModel">
        <packagedElement xmi:id="model" name="Model" visibility="public" xmi:type="uml:Model">
            <packagedElement xmi:id="statemachine" name="AStateMachine" visibility="public" isReentrant="true" xmi:type="uml:StateMachine">
                <region xmi:id="region_0" visibility="public" xmi:type="uml:Region">
                    <subvertex xmi:id="initial" name="initial" visibility="public" xmi:type="uml:Pseudostate" kind="initial">
                    </subvertex>
                    <subvertex xmi:id="off" name="off" visibility="public" xmi:type="uml:State">
                    </subvertex>
                    <subvertex xmi:id="standby" name="standby" visibility="public" xmi:type="uml:State">
                    </subvertex>
                    <subvertex xmi:id="on" name="on" visibility="public" xmi:type="uml:State">
                    <region xmi:id="region_1" visibility="public" xmi:type="uml:Region">
                        <subvertex xmi:id="on.initial" name="on.initial" visibility="public" xmi:type="uml:Pseudostate" kind="initial">
                        </subvertex>
                        <subvertex xmi:id="stopped" name="stopped" visibility="public" xmi:type="uml:State">
                        </subvertex>
                        <subvertex xmi:id="playing" name="playing" visibility="public" xmi:type="uml:State">
                        </subvertex>
                        <subvertex xmi:id="paused" name="paused" visibility="public" xmi:type="uml:State">
                        </subvertex>
                        <subvertex xmi:id="on.history" name="on.history" visibility="public" xmi:type="uml:Pseudostate" kind="shallowHistory">
                        </subvertex>
                        <transition xmi:id="on.initial_to_on.history_" visibility="public" xmi:type="uml:Transition" source="on.initial" target="on.history" kind="external">
                        </transition>
                        <transition xmi:id="stopped_to_playing_play" visibility="public" xmi:type="uml:Transition" source="stopped" target="playing" kind="external">
                            <ownedMember xmi:id="stopped_to_playing_event_play" name="play" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                            <trigger xmi:id="stopped_to_playing_event" xmi:type="uml:Trigger" name="play" event="stopped_to_playing_event_play"/>
                            <trigger xmi:id="stopped_to_playing_event_play" name="play" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        </transition>
                        <transition xmi:id="playing_to_stopped_stop" visibility="public" xmi:type="uml:Transition" source="playing" target="stopped" kind="external">
                            <ownedMember xmi:id="playing_to_stopped_event_stop" name="stop" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                            <trigger xmi:id="playing_to_stopped_event" xmi:type="uml:Trigger" name="stop" event="playing_to_stopped_event_stop"/>
                            <trigger xmi:id="playing_to_stopped_event_stop" name="stop" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        </transition>
                        <transition xmi:id="playing_to_paused_pause" visibility="public" xmi:type="uml:Transition" source="playing" target="paused" kind="external">
                            <ownedMember xmi:id="playing_to_paused_event_pause" name="pause" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                            <trigger xmi:id="playing_to_paused_event" xmi:type="uml:Trigger" name="pause" event="playing_to_paused_event_pause"/>
                            <trigger xmi:id="playing_to_paused_event_pause" name="pause" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        </transition>
                        <transition xmi:id="paused_to_playing_pause" visibility="public" xmi:type="uml:Transition" source="paused" target="playing" kind="external">
                            <ownedMember xmi:id="paused_to_playing_event_pause" name="pause" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                            <trigger xmi:id="paused_to_playing_event" xmi:type="uml:Trigger" name="pause" event="paused_to_playing_event_pause"/>
                            <trigger xmi:id="paused_to_playing_event_pause" name="pause" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        </transition>
                        <transition xmi:id="paused_to_stopped_stop" visibility="public" xmi:type="uml:Transition" source="paused" target="stopped" kind="external">
                            <ownedMember xmi:id="paused_to_stopped_event_stop" name="stop" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                            <trigger xmi:id="paused_to_stopped_event" xmi:type="uml:Trigger" name="stop" event="paused_to_stopped_event_stop"/>
                            <trigger xmi:id="paused_to_stopped_event_stop" name="stop" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        </transition>
                    </region>
                    </subvertex>
                    <subvertex xmi:id="broken" name="broken" visibility="public" xmi:type="uml:State">
                    </subvertex>
                    <subvertex xmi:id="final" name="final" visibility="public" xmi:type="uml:FinalState">
                    </subvertex>
                    <transition xmi:id="initial_to_off_" visibility="public" xmi:type="uml:Transition" source="initial" target="off" kind="external">
                    </transition>
                    <transition xmi:id="off_to_stopped_power" visibility="public" xmi:type="uml:Transition" source="off" target="stopped" kind="external">
                        <ownedMember xmi:id="off_to_stopped_event_power" name="power" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        <trigger xmi:id="off_to_stopped_event" xmi:type="uml:Trigger" name="power" event="off_to_stopped_event_power"/>
                        <trigger xmi:id="off_to_stopped_event_power" name="power" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                    </transition>
                    <transition xmi:id="on_to_off_power" visibility="public" xmi:type="uml:Transition" source="on" target="off" kind="external">
                        <ownedMember xmi:id="on_to_off_event_power" name="power" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        <trigger xmi:id="on_to_off_event" xmi:type="uml:Trigger" name="power" event="on_to_off_event_power"/>
                        <trigger xmi:id="on_to_off_event_power" name="power" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                    </transition>
                    <transition xmi:id="on_to_paused_random_occasions" visibility="public" xmi:type="uml:Transition" source="on" target="paused" kind="external">
                        <ownedMember xmi:id="on_to_paused_event_random_occasions" name="random_occasions" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        <trigger xmi:id="on_to_paused_event" xmi:type="uml:Trigger" name="random_occasions" event="on_to_paused_event_random_occasions"/>
                        <trigger xmi:id="on_to_paused_event_random_occasions" name="random_occasions" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                    </transition>
                    <transition xmi:id="playing_to_broken_thing_is_past_guarantee_end_date" visibility="public" xmi:type="uml:Transition" source="playing" target="broken" kind="external">
                        <ownedMember xmi:id="playing_to_broken_event_thing_is_past_guarantee_end_date" name="thing_is_past_guarantee_end_date" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                        <trigger xmi:id="playing_to_broken_event" xmi:type="uml:Trigger" name="thing_is_past_guarantee_end_date" event="playing_to_broken_event_thing_is_past_guarantee_end_date"/>
                        <trigger xmi:id="playing_to_broken_event_thing_is_past_guarantee_end_date" name="thing_is_past_guarantee_end_date" visibility="public" xmi:type="uml:AnyReceiveEvent"/>
                    </transition>
                    <transition xmi:id="broken_to_final_" visibility="public" xmi:type="uml:Transition" source="broken" target="final" kind="external">
                    </transition>
                </region>
            </packagedElement>
        </packagedElement>
    </uml:Model>
</xmi:XMI>